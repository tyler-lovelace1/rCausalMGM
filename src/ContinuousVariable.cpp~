#include "ContinuousVariable.hpp"

bool ContinuousVariable::checkValue(const std::string& val) {
  try {
    double value = stod(val);
    return true;
  } catch (std::exception& e) {
    return false;
  }
}

/*
Variable ContinuousVariable::like(const std::string& name) {
  ContinuousVariable *var = new ContinuousVariable(name);
  return (Variable) *var;
}
*/

// [[Rcpp::export]]
void test_continuous(const std::string& name, const double& val1, const std::string& val2) {
  ContinuousVariable cv = ContinuousVariable(name);
  Rcpp::Rcout << std::boolalpha;
  Rcpp::Rcout << "Continuous Variable Test" << std::endl;
  Rcpp::Rcout << "Name: " << cv.getName() << std::endl;
  Rcpp::Rcout << "Type: " << cv.getType() << std::endl;
  Rcpp::Rcout << "Missing Value: " << cv.getMissingValueMarker() << std::endl;
  Rcpp::Rcout << "checkValue Test 1: " << cv.checkValue(val1) << std::endl;
  Rcpp::Rcout << "checkValue Test 2: " << cv.checkValue(val2) << std::endl;
}
